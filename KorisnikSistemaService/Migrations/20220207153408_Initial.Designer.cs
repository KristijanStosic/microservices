// <auto-generated />
using System;
using KorisnikSistemaService.Entities.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KorisnikSistemaService.Migrations
{
    [DbContext(typeof(KorisnikSistemaContext))]
    [Migration("20220207153408_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KorisnikSistemaService.Entities.KorisnikSistema", b =>
                {
                    b.Property<Guid>("KorisnikSistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipKorisnikaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KorisnikSistemaId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.HasIndex("TipKorisnikaId");

                    b.ToTable("KorisnikSistema");

                    b.HasData(
                        new
                        {
                            KorisnikSistemaId = new Guid("523e45d9-f7a0-42a0-8850-f64ad734b8f3"),
                            Email = "Operater@gmail.com",
                            Ime = "Operater",
                            KorisnickoIme = "Operater",
                            Lozinka = "$2a$11$3yEazS9ipOrUw8bkAjykTu2S76ixA8ONbm6XUYnJBQqyfnJtB5d9O",
                            Prezime = "Operater",
                            TipKorisnikaId = new Guid("e98b3a1c-eb0c-4e16-8866-a811115cac7c")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("0f7918d4-1fce-49c0-b638-9274c08c499d"),
                            Email = "TehnickiSekretar@gmail.com",
                            Ime = "TehnickiSekretar",
                            KorisnickoIme = "TehnickiSekretar",
                            Lozinka = "$2a$11$QSQ8ynEzPzB8zXxx2kx7wOnb1DQMGDKNFBH7iJU5bGo4S0V4MZc/y",
                            Prezime = "TehnickiSekretar",
                            TipKorisnikaId = new Guid("74e09d41-9b18-493b-9569-7069ea26beef")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("d84f081c-0178-4f89-aec3-13bcb645c6a5"),
                            Email = "PrvaKomisija@gmail.com",
                            Ime = "PrvaKomisija",
                            KorisnickoIme = "PrvaKomisija",
                            Lozinka = "$2a$11$sA240A1NWd./XOGERzgIaemdmfc3mTMpzY3fENEeCTxRkXt2mwHj.",
                            Prezime = "PrvaKomisija",
                            TipKorisnikaId = new Guid("64591a2c-1aa9-4bb2-aded-deb0956e3e82")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("2fa88a5b-372e-4c37-bb20-7b786e6d4317"),
                            Email = "Superuser@gmail.com",
                            Ime = "Superuser",
                            KorisnickoIme = "Superuser",
                            Lozinka = "$2a$11$JLNRe/erSEY1/KzoLPR2I.Pt9C7ghkKj412LqHkhGDesSo2e31JLe",
                            Prezime = "Superuser",
                            TipKorisnikaId = new Guid("f368886e-c58b-48fb-82b3-b1caf54275ba")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("e4a42018-e71e-4e39-9c88-eae9199f46cd"),
                            Email = "OperaterNadmetanja@gmail.com",
                            Ime = "OperaterNadmetanja",
                            KorisnickoIme = "OperaterNadmetanja",
                            Lozinka = "$2a$11$.FVNptUs.TU0CfLpVAkGZux/T1eXglctk9cOaMhQ1UVNB0dmObsES",
                            Prezime = "OperaterNadmetanja",
                            TipKorisnikaId = new Guid("1e9a8348-c519-405d-b080-cbfdc60db8b6")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("27e3d55f-e73f-4f7c-b49b-34a7e7209f44"),
                            Email = "Licitant@gmail.com",
                            Ime = "Licitant",
                            KorisnickoIme = "Licitant",
                            Lozinka = "$2a$11$TjKnLKjz3jeGAYO4/6gr8uLmlYtWviOrR7x0blKH2aw2bCLYEo5S6",
                            Prezime = "Licitant",
                            TipKorisnikaId = new Guid("213cbfd7-821e-4496-86aa-a370f7804bb7")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("bb71d94a-e97c-4fb7-9e3c-55ea09a65a72"),
                            Email = "Menadzer@gmail.com",
                            Ime = "Menadzer",
                            KorisnickoIme = "Menadzer",
                            Lozinka = "$2a$11$qpgSQlGR/5pjS5aQi25GWe6D02fWY1kRq/OntvbmK02OfnybbXsY.",
                            Prezime = "Menadzer",
                            TipKorisnikaId = new Guid("909987de-f2fc-4bb8-bd99-3944434ff4cd")
                        },
                        new
                        {
                            KorisnikSistemaId = new Guid("bd3a7634-e992-47cd-989c-3ba9aa5368ea"),
                            Email = "Administrator@gmail.com",
                            Ime = "Administrator",
                            KorisnickoIme = "Administrator",
                            Lozinka = "$2a$11$e6ctOJTcIpfLKUVit/KOo.KS5NV.xKVxj49aCc/OOxVNf1mNW1/Te",
                            Prezime = "Administrator",
                            TipKorisnikaId = new Guid("f76ffdb2-32d6-4e36-84a1-431c5158c028")
                        });
                });

            modelBuilder.Entity("KorisnikSistemaService.Entities.TipKorisnika", b =>
                {
                    b.Property<Guid>("TipKorisnikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipaKorisnika")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TipKorisnikaId");

                    b.HasIndex("NazivTipaKorisnika")
                        .IsUnique();

                    b.ToTable("TipKorisnika");

                    b.HasData(
                        new
                        {
                            TipKorisnikaId = new Guid("e98b3a1c-eb0c-4e16-8866-a811115cac7c"),
                            NazivTipaKorisnika = "Operater"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("74e09d41-9b18-493b-9569-7069ea26beef"),
                            NazivTipaKorisnika = "TehnickiSekretar"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("64591a2c-1aa9-4bb2-aded-deb0956e3e82"),
                            NazivTipaKorisnika = "PrvaKomisija"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("f368886e-c58b-48fb-82b3-b1caf54275ba"),
                            NazivTipaKorisnika = "Superuser"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("1e9a8348-c519-405d-b080-cbfdc60db8b6"),
                            NazivTipaKorisnika = "OperaterNadmetanja"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("213cbfd7-821e-4496-86aa-a370f7804bb7"),
                            NazivTipaKorisnika = "Licitant"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("909987de-f2fc-4bb8-bd99-3944434ff4cd"),
                            NazivTipaKorisnika = "Menadzer"
                        },
                        new
                        {
                            TipKorisnikaId = new Guid("f76ffdb2-32d6-4e36-84a1-431c5158c028"),
                            NazivTipaKorisnika = "Administrator"
                        });
                });

            modelBuilder.Entity("KorisnikSistemaService.Entities.KorisnikSistema", b =>
                {
                    b.HasOne("KorisnikSistemaService.Entities.TipKorisnika", "TipKorisnika")
                        .WithMany()
                        .HasForeignKey("TipKorisnikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipKorisnika");
                });
#pragma warning restore 612, 618
        }
    }
}
