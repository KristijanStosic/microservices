// <auto-generated />
using System;
using JavnoNadmetanjeService.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JavnoNadmetanjeService.Migrations
{
    [DbContext(typeof(JavnoNadmetanjeContext))]
    partial class JavnoNadmetanjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.Etapa", b =>
                {
                    b.Property<Guid>("EtapaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DanPoRedu")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VremeKraja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VremePocetka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ZavrsenaUspesno")
                        .HasColumnType("bit");

                    b.HasKey("EtapaId");

                    b.HasIndex("JavnoNadmetanjeId");

                    b.ToTable("Etapa");

                    b.HasData(
                        new
                        {
                            EtapaId = new Guid("baf25a2f-68af-4f36-a300-f4f78ba1d10c"),
                            DanPoRedu = 1,
                            Datum = new DateTime(2022, 2, 7, 16, 33, 11, 433, DateTimeKind.Local).AddTicks(4190),
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            VremeKraja = "17:33",
                            VremePocetka = "16:33",
                            ZavrsenaUspesno = false
                        },
                        new
                        {
                            EtapaId = new Guid("0b410560-5868-4f34-8695-098bfc2b53e1"),
                            DanPoRedu = 1,
                            Datum = new DateTime(2022, 2, 12, 16, 33, 11, 451, DateTimeKind.Local).AddTicks(2685),
                            JavnoNadmetanjeId = new Guid("6849bbbe-5798-4c04-aa20-58de420aa578"),
                            VremeKraja = "18:33",
                            VremePocetka = "16:33",
                            ZavrsenaUspesno = false
                        },
                        new
                        {
                            EtapaId = new Guid("759775e2-7e4b-43d3-a0e5-395cb22f9bb5"),
                            DanPoRedu = 2,
                            Datum = new DateTime(2022, 2, 9, 16, 33, 11, 451, DateTimeKind.Local).AddTicks(2775),
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            VremeKraja = "20:33",
                            VremePocetka = "16:33",
                            ZavrsenaUspesno = true
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.JavnoNadmetanje", b =>
                {
                    b.Property<Guid>("JavnoNadmetanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojUcesnika")
                        .HasColumnType("int");

                    b.Property<int>("IzlicitiranaCena")
                        .HasColumnType("int");

                    b.Property<bool>("Izuzeto")
                        .HasColumnType("bit");

                    b.Property<int>("Krug")
                        .HasColumnType("int");

                    b.Property<Guid?>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PeriodZakupa")
                        .HasColumnType("int");

                    b.Property<double>("PocetnaCenaHektar")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VisinaDopuneDepozita")
                        .HasColumnType("int");

                    b.HasKey("JavnoNadmetanjeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipId");

                    b.ToTable("JavnoNadmetanje");

                    b.HasData(
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            AdresaId = new Guid("1c989ee3-13b2-4d3b-abeb-c4e6343eace7"),
                            BrojUcesnika = 5,
                            IzlicitiranaCena = 400,
                            Izuzeto = false,
                            Krug = 2,
                            KupacId = new Guid("febd1c29-90e7-40c2-97f3-1e88495fe98d"),
                            PeriodZakupa = 2,
                            PocetnaCenaHektar = 350.5,
                            StatusId = new Guid("8457e79a-d24a-4623-a34c-cde32435df23"),
                            TipId = new Guid("ab5b1fe9-d09f-471d-8e4c-e55ebd7e87b3"),
                            VisinaDopuneDepozita = 50
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("6849bbbe-5798-4c04-aa20-58de420aa578"),
                            BrojUcesnika = 15,
                            IzlicitiranaCena = 0,
                            Izuzeto = false,
                            Krug = 1,
                            PeriodZakupa = 3,
                            PocetnaCenaHektar = 550.0,
                            StatusId = new Guid("3b7ee65f-eb68-4a32-ae69-df7fdf463188"),
                            TipId = new Guid("d6d56b98-3672-4bdb-a0cb-e916ffe053c8"),
                            VisinaDopuneDepozita = 150
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("b195c4c2-2b26-40ad-8ff6-c212474acc83"),
                            AdresaId = new Guid("1c989ee3-13b2-4d3b-abeb-c4e6343eace7"),
                            BrojUcesnika = 7,
                            IzlicitiranaCena = 0,
                            Izuzeto = true,
                            Krug = 5,
                            PeriodZakupa = 1,
                            PocetnaCenaHektar = 1350.5,
                            StatusId = new Guid("8457e79a-d24a-4623-a34c-cde32435df23"),
                            TipId = new Guid("d6d56b98-3672-4bdb-a0cb-e916ffe053c8"),
                            VisinaDopuneDepozita = 3
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeDeoParcele", b =>
                {
                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeoParceleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JavnoNadmetanjeId", "DeoParceleId");

                    b.ToTable("JavnoNadmetanjeDeoParcele");

                    b.HasData(
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            DeoParceleId = new Guid("17894615-ca22-4943-87c8-16c246a35879")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            DeoParceleId = new Guid("44302280-3611-4667-bcfc-08b4e272bb28")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("b195c4c2-2b26-40ad-8ff6-c212474acc83"),
                            DeoParceleId = new Guid("44302280-3611-4667-bcfc-08b4e272bb28")
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeKupac", b =>
                {
                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JavnoNadmetanjeId", "KupacId");

                    b.ToTable("JavnoNadmetanjeKupac");

                    b.HasData(
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            KupacId = new Guid("febd1c29-90e7-40c2-97f3-1e88495fe98d")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            KupacId = new Guid("4ba95c01-aa89-4d36-a467-c72b0fcc5b80")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("b195c4c2-2b26-40ad-8ff6-c212474acc83"),
                            KupacId = new Guid("4ba95c01-aa89-4d36-a467-c72b0fcc5b80")
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeOvlascenoLice", b =>
                {
                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OvlascenoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JavnoNadmetanjeId", "OvlascenoLiceId");

                    b.ToTable("JavnoNadmetanjeOvlascenoLice");

                    b.HasData(
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            OvlascenoLiceId = new Guid("e22f999d-5c61-4dce-965b-9c6667efc74d")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            OvlascenoLiceId = new Guid("5ed44cab-255d-4bb7-9cc9-828ec90bfaf5")
                        },
                        new
                        {
                            JavnoNadmetanjeId = new Guid("b195c4c2-2b26-40ad-8ff6-c212474acc83"),
                            OvlascenoLiceId = new Guid("5ed44cab-255d-4bb7-9cc9-828ec90bfaf5")
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivStatusa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StatusId");

                    b.HasIndex("NazivStatusa")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = new Guid("8457e79a-d24a-4623-a34c-cde32435df23"),
                            NazivStatusa = "Prvi krug"
                        },
                        new
                        {
                            StatusId = new Guid("3b7ee65f-eb68-4a32-ae69-df7fdf463188"),
                            NazivStatusa = "Drugi krug sa starim uslovima"
                        },
                        new
                        {
                            StatusId = new Guid("1588803d-c08c-4d14-9343-954f6dc785e8"),
                            NazivStatusa = "Drugi krug sa novim uslovima"
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.Tip", b =>
                {
                    b.Property<Guid>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TipId");

                    b.HasIndex("NazivTipa")
                        .IsUnique();

                    b.ToTable("Tip");

                    b.HasData(
                        new
                        {
                            TipId = new Guid("d6d56b98-3672-4bdb-a0cb-e916ffe053c8"),
                            NazivTipa = "Javna licitacija"
                        },
                        new
                        {
                            TipId = new Guid("ab5b1fe9-d09f-471d-8e4c-e55ebd7e87b3"),
                            NazivTipa = "Otvaranje zatvorenih ponuda"
                        });
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.Etapa", b =>
                {
                    b.HasOne("JavnoNadmetanjeService.Entities.JavnoNadmetanje", "JavnoNadmetanje")
                        .WithMany("Etape")
                        .HasForeignKey("JavnoNadmetanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JavnoNadmetanje");
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.JavnoNadmetanje", b =>
                {
                    b.HasOne("JavnoNadmetanjeService.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavnoNadmetanjeService.Entities.Tip", "Tip")
                        .WithMany()
                        .HasForeignKey("TipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeDeoParcele", b =>
                {
                    b.HasOne("JavnoNadmetanjeService.Entities.JavnoNadmetanje", "JavnoNadmetanje")
                        .WithMany()
                        .HasForeignKey("JavnoNadmetanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JavnoNadmetanje");
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeKupac", b =>
                {
                    b.HasOne("JavnoNadmetanjeService.Entities.JavnoNadmetanje", "JavnoNadmetanje")
                        .WithMany()
                        .HasForeignKey("JavnoNadmetanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JavnoNadmetanje");
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.ManyToMany.JavnoNadmetanjeOvlascenoLice", b =>
                {
                    b.HasOne("JavnoNadmetanjeService.Entities.JavnoNadmetanje", "JavnoNadmetanje")
                        .WithMany()
                        .HasForeignKey("JavnoNadmetanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JavnoNadmetanje");
                });

            modelBuilder.Entity("JavnoNadmetanjeService.Entities.JavnoNadmetanje", b =>
                {
                    b.Navigation("Etape");
                });
#pragma warning restore 612, 618
        }
    }
}
