// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrijavaService.Entities.DataContext;

namespace PrijavaService.Migrations
{
    [DbContext(typeof(PrijavaContext))]
    [Migration("20220207190948_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrijavaService.Entities.DokFizickaLica", b =>
                {
                    b.Property<Guid>("DokFizickaLicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivDokumenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrijavaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DokFizickaLicaId");

                    b.HasIndex("PrijavaId");

                    b.ToTable("DokFizickaLica");

                    b.HasData(
                        new
                        {
                            DokFizickaLicaId = new Guid("522de090-3873-4113-821c-c000f6ef7ae5"),
                            NazivDokumenta = "Dokument FL 1",
                            PrijavaId = new Guid("a370bc58-2cb2-4d8d-9cfb-b444841aeb80")
                        },
                        new
                        {
                            DokFizickaLicaId = new Guid("dd8e0e7b-0c07-45e8-a1ad-1517853e8940"),
                            NazivDokumenta = "Dokument FL 2",
                            PrijavaId = new Guid("a370bc58-2cb2-4d8d-9cfb-b444841aeb80")
                        });
                });

            modelBuilder.Entity("PrijavaService.Entities.DokPravnaLica", b =>
                {
                    b.Property<Guid>("DokPravnaLicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivDokumenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrijavaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DokPravnaLicaId");

                    b.HasIndex("PrijavaId");

                    b.ToTable("DokPravnaLica");

                    b.HasData(
                        new
                        {
                            DokPravnaLicaId = new Guid("6edac589-e1f6-4733-b9d3-da55256ee707"),
                            NazivDokumenta = "Dokument PL 1",
                            PrijavaId = new Guid("3040da81-b4b5-47bd-a47c-f1474341f162")
                        },
                        new
                        {
                            DokPravnaLicaId = new Guid("de1f2617-6def-48c1-a523-218a2b062916"),
                            NazivDokumenta = "Dokument PL 2",
                            PrijavaId = new Guid("3040da81-b4b5-47bd-a47c-f1474341f162")
                        });
                });

            modelBuilder.Entity("PrijavaService.Entities.ManyToMany.PrijavaJavnoNadmetanje", b =>
                {
                    b.Property<Guid>("PrijavaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrijavaId", "JavnoNadmetanjeId");

                    b.ToTable("PrijavaJavnoNadmetanje");

                    b.HasData(
                        new
                        {
                            PrijavaId = new Guid("3040da81-b4b5-47bd-a47c-f1474341f162"),
                            JavnoNadmetanjeId = new Guid("e22f999d-5c61-4dce-965b-9c6667efc74d")
                        },
                        new
                        {
                            PrijavaId = new Guid("3040da81-b4b5-47bd-a47c-f1474341f162"),
                            JavnoNadmetanjeId = new Guid("5ed44cab-255d-4bb7-9cc9-828ec90bfaf5")
                        },
                        new
                        {
                            PrijavaId = new Guid("a370bc58-2cb2-4d8d-9cfb-b444841aeb80"),
                            JavnoNadmetanjeId = new Guid("5ed44cab-255d-4bb7-9cc9-828ec90bfaf5")
                        });
                });

            modelBuilder.Entity("PrijavaService.Entities.Prijava", b =>
                {
                    b.Property<Guid>("PrijavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojPrijave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MestoPrijave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatPrijema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ZatvorenaPonuda")
                        .HasColumnType("bit");

                    b.HasKey("PrijavaId");

                    b.ToTable("Prijava");

                    b.HasData(
                        new
                        {
                            PrijavaId = new Guid("3040da81-b4b5-47bd-a47c-f1474341f162"),
                            BrojPrijave = "B22",
                            DatumPrijave = new DateTime(2022, 2, 7, 20, 9, 47, 936, DateTimeKind.Local).AddTicks(1384),
                            KupacId = new Guid("febd1c29-90e7-40c2-97f3-1e88495fe98d"),
                            MestoPrijave = "Mesto 1",
                            ZatvorenaPonuda = true
                        },
                        new
                        {
                            PrijavaId = new Guid("a370bc58-2cb2-4d8d-9cfb-b444841aeb80"),
                            BrojPrijave = "B255",
                            DatumPrijave = new DateTime(2022, 2, 7, 20, 9, 47, 957, DateTimeKind.Local).AddTicks(3059),
                            KupacId = new Guid("febd1c29-90e7-40c2-97f3-1e88495fe98d"),
                            MestoPrijave = "Mesto 2",
                            ZatvorenaPonuda = false
                        });
                });

            modelBuilder.Entity("PrijavaService.Entities.DokFizickaLica", b =>
                {
                    b.HasOne("PrijavaService.Entities.Prijava", "Prijava")
                        .WithMany("DokFizickaLica")
                        .HasForeignKey("PrijavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prijava");
                });

            modelBuilder.Entity("PrijavaService.Entities.DokPravnaLica", b =>
                {
                    b.HasOne("PrijavaService.Entities.Prijava", "Prijava")
                        .WithMany("DokPravnaLica")
                        .HasForeignKey("PrijavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prijava");
                });

            modelBuilder.Entity("PrijavaService.Entities.ManyToMany.PrijavaJavnoNadmetanje", b =>
                {
                    b.HasOne("PrijavaService.Entities.Prijava", "Prijava")
                        .WithMany()
                        .HasForeignKey("PrijavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prijava");
                });

            modelBuilder.Entity("PrijavaService.Entities.Prijava", b =>
                {
                    b.Navigation("DokFizickaLica");

                    b.Navigation("DokPravnaLica");
                });
#pragma warning restore 612, 618
        }
    }
}
