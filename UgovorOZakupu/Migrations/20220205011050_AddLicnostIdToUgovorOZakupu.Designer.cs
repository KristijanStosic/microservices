// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UgovorOZakupu.DbContext;

namespace UgovorOZakupu.Migrations
{
    [DbContext(typeof(UgovorOZakupuDbContext))]
    [Migration("20220205011050_AddLicnostIdToUgovorOZakupu")]
    partial class AddLicnostIdToUgovorOZakupu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UgovorOZakupu.Entities.RokDospeca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<Guid>("UgovorOZakupuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UgovorOZakupuId");

                    b.ToTable("RokDospeca");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.TipGarancije", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipGarancije");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumPotpisivanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavodjenja")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicnostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MestoPotpisivanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RokZaVracanje")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TipGarancijeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZavodniBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipGarancijeId");

                    b.ToTable("UgovorOZakupu");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.RokDospeca", b =>
                {
                    b.HasOne("UgovorOZakupu.Entities.UgovorOZakupu", "UgovorOZakupu")
                        .WithMany("RokoviDospeca")
                        .HasForeignKey("UgovorOZakupuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UgovorOZakupu");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.HasOne("UgovorOZakupu.Entities.TipGarancije", "TipGarancije")
                        .WithMany()
                        .HasForeignKey("TipGarancijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipGarancije");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.Navigation("RokoviDospeca");
                });
#pragma warning restore 612, 618
        }
    }
}
