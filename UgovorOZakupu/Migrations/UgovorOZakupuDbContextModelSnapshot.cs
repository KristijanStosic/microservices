// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UgovorOZakupu.DbContext;

namespace UgovorOZakupu.Migrations
{
    [DbContext(typeof(UgovorOZakupuDbContext))]
    partial class UgovorOZakupuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UgovorOZakupu.Entities.RokDospeca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<Guid>("UgovorOZakupuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UgovorOZakupuId");

                    b.ToTable("RokDospeca");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cc7b507-9fc7-4d71-9a5a-198e77ead9d3"),
                            Rok = 3,
                            UgovorOZakupuId = new Guid("ea9e8d12-0af9-4926-b022-fd1bd951a3b6")
                        },
                        new
                        {
                            Id = new Guid("999f0824-0de9-4c1b-9951-3477c3808f3c"),
                            Rok = 6,
                            UgovorOZakupuId = new Guid("ea9e8d12-0af9-4926-b022-fd1bd951a3b6")
                        },
                        new
                        {
                            Id = new Guid("99866822-1176-485b-9561-5f4e210922fe"),
                            Rok = 7,
                            UgovorOZakupuId = new Guid("a0dcd0f0-a6b2-4564-922a-b54880363c39")
                        },
                        new
                        {
                            Id = new Guid("b47767a5-34d4-4b46-90a1-dfc7baa67823"),
                            Rok = 10,
                            UgovorOZakupuId = new Guid("42988239-b116-4100-bd15-06869c0d6fba")
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.TipGarancije", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipGarancije");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3085ea9a-ea2a-4577-9e03-467812d8ef56"),
                            NazivTipa = "Činidbena garancija"
                        },
                        new
                        {
                            Id = new Guid("be38618a-783c-4850-af91-9645105f54f8"),
                            NazivTipa = "Avansna garancija"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumPotpisivanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavodjenja")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicnostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MestoPotpisivanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RokZaVracanje")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TipGarancijeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZavodniBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipGarancijeId");

                    b.ToTable("UgovorOZakupu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea9e8d12-0af9-4926-b022-fd1bd951a3b6"),
                            DatumPotpisivanja = new DateTime(2022, 2, 4, 20, 18, 2, 896, DateTimeKind.Local).AddTicks(3068),
                            DatumZavodjenja = new DateTime(2022, 2, 4, 20, 21, 2, 891, DateTimeKind.Local).AddTicks(5899),
                            DokumentId = new Guid("854a5603-31c6-4815-b393-a2b61887ba5e"),
                            JavnoNadmetanjeId = new Guid("56a7cff5-cb0a-46b8-bfc1-93db415feeb4"),
                            KupacId = new Guid("4ba95c01-aa89-4d36-a467-c72b0fcc5b80"),
                            LicnostId = new Guid("95dbbc3b-b961-4364-9bf5-b6f2b4256393"),
                            MestoPotpisivanja = "Subotica",
                            RokZaVracanje = new DateTime(2022, 2, 18, 20, 21, 2, 896, DateTimeKind.Local).AddTicks(1641),
                            TipGarancijeId = new Guid("3085ea9a-ea2a-4577-9e03-467812d8ef56"),
                            ZavodniBroj = "UZ1/02-2022"
                        },
                        new
                        {
                            Id = new Guid("a0dcd0f0-a6b2-4564-922a-b54880363c39"),
                            DatumPotpisivanja = new DateTime(2022, 2, 7, 20, 18, 2, 896, DateTimeKind.Local).AddTicks(6588),
                            DatumZavodjenja = new DateTime(2022, 2, 7, 20, 20, 2, 896, DateTimeKind.Local).AddTicks(6554),
                            DokumentId = new Guid("13b6c9df-03b9-4313-af6a-6c2e076e8a0a"),
                            JavnoNadmetanjeId = new Guid("6849bbbe-5798-4c04-aa20-58de420aa578"),
                            KupacId = new Guid("4ba95c01-aa89-4d36-a467-c72b0fcc5b80"),
                            LicnostId = new Guid("4da64d71-ee63-4886-bcd3-fb7ae004a384"),
                            MestoPotpisivanja = "Novi Sad",
                            RokZaVracanje = new DateTime(2022, 2, 20, 20, 21, 2, 896, DateTimeKind.Local).AddTicks(6582),
                            TipGarancijeId = new Guid("3085ea9a-ea2a-4577-9e03-467812d8ef56"),
                            ZavodniBroj = "UZ2/02-2022"
                        },
                        new
                        {
                            Id = new Guid("42988239-b116-4100-bd15-06869c0d6fba"),
                            DatumPotpisivanja = new DateTime(2022, 2, 7, 20, 24, 2, 896, DateTimeKind.Local).AddTicks(6628),
                            DatumZavodjenja = new DateTime(2022, 2, 7, 20, 26, 2, 896, DateTimeKind.Local).AddTicks(6618),
                            DokumentId = new Guid("7147fd52-b938-4cec-8b81-dfa51f123f0c"),
                            JavnoNadmetanjeId = new Guid("b195c4c2-2b26-40ad-8ff6-c212474acc83"),
                            KupacId = new Guid("4ba95c01-aa89-4d36-a467-c72b0fcc5b80"),
                            LicnostId = new Guid("e3db1e95-c4db-4e11-ac52-9b9e26207e1c"),
                            MestoPotpisivanja = "Beograd",
                            RokZaVracanje = new DateTime(2022, 2, 21, 20, 21, 2, 896, DateTimeKind.Local).AddTicks(6623),
                            TipGarancijeId = new Guid("be38618a-783c-4850-af91-9645105f54f8"),
                            ZavodniBroj = "UZ3/02-2022"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.RokDospeca", b =>
                {
                    b.HasOne("UgovorOZakupu.Entities.UgovorOZakupu", "UgovorOZakupu")
                        .WithMany("RokoviDospeca")
                        .HasForeignKey("UgovorOZakupuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UgovorOZakupu");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.HasOne("UgovorOZakupu.Entities.TipGarancije", "TipGarancije")
                        .WithMany()
                        .HasForeignKey("TipGarancijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipGarancije");
                });

            modelBuilder.Entity("UgovorOZakupu.Entities.UgovorOZakupu", b =>
                {
                    b.Navigation("RokoviDospeca");
                });
#pragma warning restore 612, 618
        }
    }
}
